name: Update Hackathon Information & Sync README

on:
  push:
    branches:
      - main
    paths:
      - 'registration/*.md'
      - 'README.md'
  pull_request:
    branches:
      - main
    paths:
      - 'registration/*.md'
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-and-sync:
    # Simplified condition: execute on push and manual trigger, check only on PR
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install pyyaml

      - name: Check what files changed
        id: check_files
        run: |
          echo "Checking changed files..."
          
          # Check if registration files changed (optimized detection logic)
          if git diff --name-only HEAD~1 HEAD | grep -q "registration/.*\.md"; then
            echo "registration_changed=true" >> $GITHUB_OUTPUT
            echo "Registration files changed"
            git diff --name-only HEAD~1 HEAD | grep "registration/.*\.md"
          else
            echo "registration_changed=false" >> $GITHUB_OUTPUT
            echo "No registration file changes"
          fi
          
          # Check if README.md changed
          if git diff --name-only HEAD~1 HEAD | grep -q "^README\.md$"; then
            echo "readme_changed=true" >> $GITHUB_OUTPUT
            echo "README.md changed"
          else
            echo "readme_changed=false" >> $GITHUB_OUTPUT
            echo "README.md not changed"
          fi
          
          # Output all changed files for debugging
          echo "All changed files:"
          git diff --name-only HEAD~1 HEAD

      - name: Update hackathon information
        if: steps.check_files.outputs.registration_changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "Updating hackathon participant information..."
          python3 scripts/update_hackathon.py

      - name: Copy README.md to README_ZH-CN.md
        if: steps.check_files.outputs.readme_changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "Syncing README.md to README_ZH-CN.md..."
          python3 scripts/update_hackathon.py --copy-only

      - name: Check for any changes
        id: check_changes
        run: |
          # Check if there are any file changes
          if git diff --quiet README.md README_EN.md README_ZH-CN.md; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected, will commit"
            git status --porcelain
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add all related files
          git add README.md README_EN.md README_ZH-CN.md
          
          # Generate commit message
          commit_msg="ü§ñ Auto-update: "
          if [[ "${{ steps.check_files.outputs.registration_changed }}" == "true" ]]; then
            commit_msg+="Update participant information"
          fi
          if [[ "${{ steps.check_files.outputs.readme_changed }}" == "true" ]]; then
            if [[ "${{ steps.check_files.outputs.registration_changed }}" == "true" ]]; then
              commit_msg+=" & "
            fi
            commit_msg+="Sync README to ZH-CN"
          fi
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            commit_msg="üîÑ Manual trigger: Update all documentation"
          fi
          
          git commit -m "$commit_msg"
          git pull --rebase origin main
          git push

      - name: Summary
        run: |
          echo "## üéâ Workflow Execution Summary"
          echo "- Registration files updated: ${{ steps.check_files.outputs.registration_changed }}"
          echo "- README.md updated: ${{ steps.check_files.outputs.readme_changed }}"
          echo "- Has changes: ${{ steps.check_changes.outputs.has_changes }}"
          if [[ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]]; then
            echo "‚úÖ Documentation has been successfully updated and committed"
          else
            echo "‚ÑπÔ∏è No content detected that needs updating"
          fi
